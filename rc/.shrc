#!/bin/sh
# A generic setup file for bash/zsh/...

# TERMINAL CONFIG
# Helper functions
exists() {
	for d in $PATH; do
		if test -x "$d/$1"; then 
			return 1
		fi
	done
	return 0
}

# Set terminal input mode to vi keybindings
set -o vi

# ENVIRONMENT LAYERS
# Set default editor
export VISUAL=nvim
export EDITOR=nvim

# Load .sh_aliases
if [ -f ~/.sh-aliases ]; then
	. ~/.sh-aliases
fi

# Load .profle
if [ -f ~/.profile ]; then
	. ~/.profile
fi

# Update PATH
export PATH="$HOME/.scripts:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"

# Set Gem Path for ruby
export GEM_HOME="$HOME/.gems"
export PATH="$HOME/.gems/bin:$PATH"

# Set Java Home
export JAVA_HOME=/usr/lib/jvm/java-18-openjdk-amd64
export PATH=$JAVA_HOME/jre/bin:$PATH

# FZF settings
export FZF_DEFAULT_OPTS='--preview="pistol {}"'

if exists 'fdfind'; then
	export FZF_DEFAULT_COMMAND='fdfind --hidden --follow .'

	_fzf_compgen_path() {
		fdfind --hidden --follow . "$1"
	}

	_fzf_compgen_dir() {
		fdfind --hidden --follow . --type d "$1"
	}

	export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND --type f"
	export ALT_C_COMMAND="$FZF_DEFAULT_COMMAND --type d"
fi

# UBUNTU .BASHRC TEMPLATE STARTS HERE

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
	*i*) ;;
	*) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto --group-directories-first'
	#alias dir='dir --color=auto'
	#alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# UBUNTU .BASHRC TEMPLATE ENDS HERE
function ranger {
	local IFS=$'\t\n'
	local tempfile="$(mktemp -t tmp.XXXXXX)"
	local ranger_cmd=(
	command
	ranger
	--cmd="map Q chain shell echo %d > "$tempfile"; quitall"
)

${ranger_cmd[@]} "$@"
if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
	cd -- "$(cat "$tempfile")" || return
fi
command rm -f -- "$tempfile" 2>/dev/null
}
